{"version":3,"sources":["components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["Notifications","props","notifications","className","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Link","to","Dashboard","this","auth","uid","Redirect","Component","compose","firestoreConnect","collection","orderBy","limit","connect","state","firestore","ordered","firebase","dispatch","signOut","getState","getFirebase","then","type","NavLink","onClick","profile","initials","SignedOutLinks","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","error","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","response","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","console","log","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df88bf0f.chunk.js","sourcesContent":["import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        { notifications && notifications.map(item => {\r\n                            return (<li key={item.id}>\r\n                                <span className=\"brown-text\">{item.user} </span>\r\n                                <span>{item.content}</span>\r\n                                <div className=\"grey-text note-date\">\r\n                                  {moment(item.time.toDate()).fromNow()}\r\n                                </div>\r\n                            </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-4 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project}/>\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from \"react\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications} = this.props;\r\n    if (!auth.uid) {\r\n      return <Redirect to=\"/signin\" />;\r\n    }\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: ['createdAt', 'desc']},\r\n    { collection: \"notifications\", limit: 3, orderBy: ['time', 'desc']}\r\n  ]),\r\n  connect(mapStateToProps)\r\n)(Dashboard);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <div>\r\n            <ul className=\"right\">\r\n                <li><NavLink to='/create'>New Project</NavLink></li>\r\n                <li><NavLink to='/' onClick={props.signOut}>Log Out</NavLink></li>\r\n                <li><NavLink to='/' className=\"btn btn-floating brown lighten-2\">{props.profile.initials}</NavLink></li>\r\n            </ul>\r\n        </div>  \r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCES' });\r\n        }).catch((error) => {\r\n            dispatch({ type: 'LOGIN_ERROR', error});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCES' });\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n        .then((response) => {\r\n            return firestore.collection('users').doc(response.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCES' })\r\n        }).catch(error => {\r\n            dispatch({ type: 'SIGNUP_ERROR', error })\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <div>\r\n            <ul className=\"right\">\r\n                <li><NavLink to='/signup'>Signup</NavLink></li>\r\n                <li><NavLink to='/signin'>Login</NavLink></li>\r\n            </ul>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    return (\r\n        <nav className=\"nav-wrapper brown darken-1\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">Project Planner</Link>\r\n                {  auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />}\r\n            </div>\r\n        </nav> \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from 'moment';\r\n\r\nfunction ProjectDetails(props) {\r\n  const { project, auth } = props;\r\n  if (!auth.uid) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n  if (project) {\r\n    return (<div className=\"container section project-details\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">{project.title}</span>\r\n          <p>{project.content}</p>\r\n        </div>\r\n        <div className=\"card-action grey lighten-4 grey-text\">\r\n          <div>\r\n            Posted by {project.authorFirstName} {project.authorLastName}{\" \"}\r\n          </div>\r\n          <p>{moment(project.createdAt.toDate()).calendar()}</p>\r\n        </div>\r\n      </div>\r\n    </div>)\r\n  } else {\r\n    return <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n    </div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect(() => [\"projects\"]),\r\n  connect(mapStateToProps)\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if (auth.uid) {\r\n          return <Redirect to=\"/\" />;\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    \r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input onChange={this.handleChange} type=\"email\" id=\"email\"/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input onChange={this.handleChange} type=\"password\" id=\"password\"/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"brown btn lighten-2 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{ authError }</p> : null}\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input onChange={this.handleChange} type=\"email\" id=\"email\" />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input onChange={this.handleChange} type=\"password\" id=\"password\" />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input onChange={this.handleChange} type=\"text\" id=\"firstName\" />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input onChange={this.handleChange} type=\"text\" id=\"lastName\" />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <button className=\"brown btn lighten-2 z-depth-0\">Register</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) {\r\n      return <Redirect to=\"/signin\" />;\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create new project</h5>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input onChange={this.handleChange} type=\"text\" id=\"title\" />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea\r\n              onChange={this.handleChange}\r\n              id=\"content\"\r\n              className=\"materialize-textarea\"\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <button className=\"brown btn lighten-2 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({ \r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({type: 'CREATE_PROJECT', project });\r\n        }).catch((error) => {\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', error });\r\n        })\r\n    }\r\n};","import React from 'react';\nimport Route from 'react-router-dom/Route';\nimport BrowserRouter from 'react-router-dom/BrowserRouter';\nimport Switch from 'react-router-dom/Switch'; \nimport Dashboard from './components/dashboard/Dashboard';\nimport Navbar from './components/layout/Navbar';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n        <div className=\"App\">\n          <Navbar/>\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = { authError: null };\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_SUCCES\":\r\n      return { ...state, authError: null };\r\n    case \"LOGIN_ERROR\":\r\n      return { ...state, authError: \"Login failed\" };\r\n    case \"SIGNOUT_SUCCES\":\r\n      return state;\r\n    case \"SIGNUP_SUCCES\":\r\n      return { ...state, authError: null };\r\n    case \"SIGNUP_ERROR\":\r\n        return { ...state, authError: action.error.message };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = { projects: [] };\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('CREATE_PROJECT_ERROR');\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer =  combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firebase-firestore';\r\nimport 'firebase/auth';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDAU2hPKXW1cjS5oOALpDhH_xxkBEzVs-s\",\r\n    authDomain: \"react-redux-firebase-666a1.firebaseapp.com\",\r\n    databaseURL: \"https://react-redux-firebase-666a1.firebaseio.com\",\r\n    projectId: \"react-redux-firebase-666a1\",\r\n    storageBucket: \"react-redux-firebase-666a1.appspot.com\",\r\n    messagingSenderId: \"687200999018\",\r\n    appId: \"1:687200999018:web:5825920557746b3561dc13\",\r\n    measurementId: \"G-62ZNS7VQX4\"\r\n  };\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore();\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true}),\n    reduxFirestore(fbConfig)\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  serviceWorker.unregister();\n});"],"sourceRoot":""}